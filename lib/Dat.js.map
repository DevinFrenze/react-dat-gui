{"version":3,"sources":["../src/Dat.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;kDAgES,O;;;;;;;;;kDACA,O;;;;;;;;;mDACA,O;;;;;;;;;kDACA,O;;;;AAnET;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,G;;;AAgBF,iBAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;AAAA,2FAClB,KADkB,EACX,OADW;;AAExB,cAAK,iBAAL,GAAyB,MAAK,iBAAL,CAAuB,IAAvB,OAAzB;AAFwB;AAG3B;;;;0CAEiB,I,EAAM,K,EAAO;AAAA,yBACA,KAAK,KADL;AAAA,gBACnB,IADmB,UACnB,IADmB;AAAA,gBACb,QADa,UACb,QADa;;AAE3B,gBAAM,cAAc,sBAAI,sBAAU,IAAV,CAAJ,EAAqB,IAArB,EAA2B,KAA3B,CAApB;AACA,qBAAS,WAAT;AACH;;;yCAEgB;AAAA;;AAAA,0BAC0B,KAAK,KAD/B;AAAA,gBACL,QADK,WACL,QADK;AAAA,gBACK,IADL,WACK,IADL;AAAA,gBACW,UADX,WACW,UADX;;AAEb,mBAAO,gBAAM,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,GAAjC,CAAqC,UAAC,KAAD,EAAQ,CAAR,EAAc;AACtD,oBAAM,aAAa,sBAAY,MAAM,KAAN,CAAY,UAAxB,IAAsC,OAAK,KAAL,CAAW,UAAjD,GAA8D,MAAM,KAAN,CAAY,UAA7F;AACA,uBAAO,yBAAa,KAAb,EAAoB;AACvB,6CAAuB,CAAvB,OADuB;AAEvB,yBAAK,CAFkB;AAGvB,8BAHuB;AAIvB,0CAJuB;AAKvB,iCAAa,UALU;AAMvB,oCAAgB,OAAK;AANE,iBAApB,CAAP;AAQH,aAVM,CAAP;AAWH;;;iCAEQ;AAAA,+BACkB,KAAK,KADvB,CACG,KADH;AAAA,gBACG,KADH,gCACW,EADX;;AAEL,gBAAM,YAAY,0BAAG,eAAH,EAAoB,KAAK,KAAL,CAAW,SAA/B,CAAlB;AACA,mBACI;AAAA;gBAAA,EAAK,WAAW,SAAhB,EAA2B,OAAO,KAAlC;gBACI;AAAA;oBAAA,EAAI,WAAU,SAAd;oBACK,KAAK,cAAL;AADL;AADJ,aADJ;AAOH;;;;EApDa,gBAAM,S;;AAAlB,G,CAEK,S,GAAY;AACf,UAAM,iBAAU,MAAV,CAAiB,UADR;AAEf,cAAU,iBAAU,IAAV,CAAe,UAFV;AAGf,cAAU,iBAAU,IAAV,CAAe,UAHV;AAIf,gBAAY,iBAAU,IAJP;AAKf,eAAW,iBAAU,MALN;AAMf,WAAO,iBAAU,MANF;AAOf,gBAAY,iBAAU;AAPP,C;AAFjB,G,CAYK,Y,GAAe;AAClB,gBAAY;AADM,C;kBA4CX,G","file":"Dat.js","sourcesContent":["import cx from 'classnames';\nimport set from 'lodash.set';\nimport cloneDeep from 'lodash.clonedeep';\nimport isUndefined from 'lodash.isundefined';\nimport React, { PropTypes, cloneElement } from 'react';\n\nclass Dat extends React.Component {\n\n    static propTypes = {\n        data: PropTypes.object.isRequired,\n        children: PropTypes.node.isRequired,\n        onUpdate: PropTypes.func.isRequired,\n        liveUpdate: PropTypes.bool,\n        className: PropTypes.string,\n        style: PropTypes.object,\n        labelWidth: PropTypes.number,\n    };\n\n    static defaultProps = {\n        liveUpdate: true,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleUpdateValue = this.handleUpdateValue.bind(this);\n    }\n\n    handleUpdateValue(path, value) {\n        const { data, onUpdate } = this.props;\n        const dataUpdated = set(cloneDeep(data), path, value);\n        onUpdate(dataUpdated);\n    }\n\n    renderChildren() {\n        const { children, data, labelWidth } = this.props;\n        return React.Children.toArray(children).map((child, i) => {\n            const liveUpdate = isUndefined(child.props.liveUpdate) ? this.props.liveUpdate : child.props.liveUpdate;\n            return cloneElement(child, {\n                id: `__react_dat_gui_${i}__`,\n                key: i,\n                data,\n                liveUpdate,\n                _labelWidth: labelWidth,\n                _onUpdateValue: this.handleUpdateValue,\n            });\n        });\n    }\n\n    render() {\n        const { style = {} } = this.props;\n        const className = cx('react-dat-gui', this.props.className);\n        return (\n            <div className={className} style={style}>\n                <ul className=\"dg main\">\n                    {this.renderChildren()}\n                </ul>\n            </div>\n        );\n    }\n\n}\n\nexport default Dat;\n\nexport { default as DatString } from './components/DatString';\nexport { default as DatNumber } from './components/DatNumber';\nexport { default as DatBoolean } from './components/DatBoolean';\nexport { default as DatButton } from './components/DatButton';\n"]}