{"version":3,"sources":["../../src/components/DatNumber.jsx"],"names":[],"mappings":"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","file":"DatNumber.js","sourcesContent":["import cx from 'classnames';\nimport clamp from 'lodash.clamp';\nimport result from 'lodash.result';\nimport isFinite from 'lodash.isfinite';\nimport isString from 'lodash.isstring';\nimport React, { PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass DatNumber extends React.Component {\n\n    static propTypes = {\n        min: PropTypes.number,\n        max: PropTypes.number,\n        step: PropTypes.number,\n        data: PropTypes.object,\n        path: PropTypes.string,\n        label: PropTypes.string,\n        labelWidth: PropTypes.number,\n        liveUpdate: PropTypes.bool,\n        onUpdate: PropTypes.func,\n        _onUpdateValue: PropTypes.func,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleSliderUpdate = this.handleSliderUpdate.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: this.getValue()\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: this.getValue(nextProps)\n        });\n    }\n\n    getValue(props = this.props) {\n        return this.applyConstraints(result(props.data, props.path));\n    }\n\n    applyConstraints(value) {\n        const { min, max, step } = this.props;\n        const [ hasMin, hasMax, hasStep ] = [ isFinite(min), isFinite(max), isFinite(step) ];\n        let [ isMin, isMax ] = [ false, false ];\n        value = this.toNumber(value);\n        if (hasMin && value <= min) {\n            value = min;\n            isMin = true;\n        }\n        if (hasMax && value >= max) {\n            value = max;\n            isMax = true;\n        }\n        if (!isMin && !isMax) {\n            if (hasStep && step !== 0) {\n                value = Math.round(value / step) * step;\n            }\n        }\n        return value;\n    }\n\n    toNumber(value) {\n        const float = parseFloat(value);\n        return isNaN(float) ? 0 : float;\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleFocus(event) {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleBlur(event) {\n        document.removeEventListener('keydown', this.handleKeyDown);\n        window.getSelection().removeAllRanges();\n        const value = this.applyConstraints(event.target.value);\n        this.setState({ value }, () => {\n            this.update();\n        });\n    }\n\n    handleKeyDown(event) {\n        const key = event.keyCode || event.which;\n        if (key === 13) {\n            const value = this.applyConstraints(this.state.value);\n            this.setState({ value }, () => {\n                this.update();\n            });\n        }\n    }\n\n    handleSliderUpdate(value, isLive) {\n        value = this.applyConstraints(value);\n        this.setState({ value }, () => {\n            if (!isLive || this.props.liveUpdate) {\n                this.update();\n            }\n        });\n    }\n\n    update() {\n        const { value } = this.state;\n        this.props._onUpdateValue && this.props._onUpdateValue(this.props.path, value);\n        this.props.onUpdate && this.props.onUpdate(value);\n    }\n\n    renderSlider(width) {\n        return (\n            <Slider\n                value={this.state.value}\n                min={this.props.min}\n                max={this.props.max}\n                width={width}\n                onUpdate={this.handleSliderUpdate} />\n        );\n    }\n\n    render() {\n        const { min, max, path, label, labelWidth } = this.props;\n        const labelText = isString(label) ? label : path;\n        const hasSlider = isFinite(min) && isFinite(max);\n        const controlsWidth = 100 - labelWidth;\n        const inputWidth = hasSlider ? Math.round(controlsWidth / 3) : controlsWidth;\n        const sliderWidth = controlsWidth - inputWidth;\n        return (\n            <li className=\"cr number\">\n                <label>\n                    <span className=\"label-text\" style={{ width: `${labelWidth}%` }}>{labelText}</span>\n                    {hasSlider ? this.renderSlider(sliderWidth) : null}\n                    <input\n                        type=\"text\"\n                        inputMode=\"numeric\"\n                        value={this.state.value}\n                        style={{ width: `${inputWidth}%` }}\n                        onChange={this.handleChange}\n                        onFocus={this.handleFocus}\n                        onBlur={this.handleBlur} />\n                </label>\n            </li>\n        );\n    }\n\n}\n\nclass Slider extends React.Component {\n\n    static propTypes = {\n        value: PropTypes.number,\n        min: PropTypes.number,\n        max: PropTypes.number,\n        width: PropTypes.number,\n        onUpdate: PropTypes.func,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n\n    handleMouseDown(event) {\n        this.update(event.pageX);\n        window.addEventListener('mousemove', this.handleMouseMove);\n        window.addEventListener('mouseup', this.handleMouseUp);\n    }\n\n    handleMouseMove(event) {\n        this.update(event.pageX);\n        event.preventDefault();\n    }\n\n    handleMouseUp(event) {\n        this.update(event.pageX, false);\n        window.removeEventListener('mousemove', this.handleMouseMove);\n        window.removeEventListener('mouseup', this.handleMouseUp);\n    }\n\n    handleClick(event) {\n        // do not focus input field on slider click\n        event.preventDefault();\n    }\n\n    update(pageX, isLive = true) {\n        const { min, max, onUpdate } = this.props;\n        const rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        const x = pageX - rect.left;\n        const w = rect.right - rect.left;\n        onUpdate(min + clamp(x / w, 0, 1) * (max - min), isLive);\n    }\n\n    render() {\n        const { value, min, max, width } = this.props;\n        const widthBg = (value - min) * 100 / (max - min);\n        const style = {\n            width: `${width}%`,\n            backgroundSize: `${widthBg}% 100%`\n        };\n        return (\n            <span\n                className=\"slider\"\n                style={style}\n                onClick={this.handleClick}\n                onMouseDown={this.handleMouseDown} />\n        );\n    }\n\n}\n\nexport default DatNumber;\n"]}