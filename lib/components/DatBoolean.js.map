{"version":3,"sources":["../../src/components/DatBoolean.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,U;;;AAWF,wBAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;AAAA,kGAClB,KADkB,EACX,OADW;;AAExB,cAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,cAAK,KAAL,GAAa;AACT,mBAAO,CADE;AAET,4BAAgB;AAFP,SAAb;AAHwB;AAO3B;;;;6CAEoB;AACjB,iBAAK,QAAL,CAAc;AACV,uBAAO,KAAK,QAAL;AADG,aAAd;AAGH;;;kDAEyB,S,EAAW;AACjC,iBAAK,QAAL,CAAc;AACV,uBAAO,KAAK,QAAL,CAAc,SAAd;AADG,aAAd;AAGH;;;8CAEqB,S,EAAW,S,EAAW;AACxC,mBAAO,UAAU,EAAV,KAAiB,KAAK,KAAL,CAAW,EAA5B,IACA,UAAU,IAAV,KAAmB,KAAK,KAAL,CAAW,IAD9B,IAEA,UAAU,KAAV,KAAoB,KAAK,KAAL,CAAW,KAF/B,IAGA,UAAU,KAAV,KAAoB,KAAK,KAAL,CAAW,KAHtC;AAIH;;;mCAE4B;AAAA,gBAApB,KAAoB,yDAAZ,KAAK,KAAO;;AACzB,mBAAO,sBAAO,MAAM,IAAb,EAAmB,MAAM,IAAzB,CAAP;AACH;;;qCAEY,K,EAAO;AAAA;;AAChB,iBAAK,QAAL,CAAc,EAAE,OAAO,MAAM,MAAN,CAAa,OAAtB,EAAd,EAA+C,YAAM;AACjD,uBAAK,MAAL;AACH,aAFD;AAGH;;;iCAEQ;AAAA,gBACG,KADH,GACa,KAAK,KADlB,CACG,KADH;;AAEL,iBAAK,KAAL,CAAW,cAAX,IAA6B,KAAK,KAAL,CAAW,cAAX,CAA0B,KAAK,KAAL,CAAW,IAArC,EAA2C,KAA3C,CAA7B;AACA,iBAAK,KAAL,CAAW,QAAX,IAAuB,KAAK,KAAL,CAAW,QAAX,CAAoB,KAApB,CAAvB;AACH;;;iCAEQ;AAAA,gBACG,EADH,GACU,KAAK,KADf,CACG,EADH;AAAA,gBAEG,KAFH,GAEa,KAAK,KAFlB,CAEG,KAFH;;AAGL,gBAAM,QAAQ,sBAAS,KAAK,KAAL,CAAW,KAApB,IAA6B,KAAK,KAAL,CAAW,KAAxC,GAAgD,KAAK,KAAL,CAAW,IAAzE;AACA,mBACI;AAAA;gBAAA,EAAI,WAAU,YAAd;gBACI;AAAA;oBAAA,EAAO,SAAS,EAAhB;oBAAqB;AAArB,iBADJ;gBAEI;AAAA;oBAAA,EAAK,WAAU,kBAAf;oBACI;AACI,8BAAK,UADT;AAEI,4BAAI,EAFR;AAGI,iCAAS,KAHb;AAII,kCAAU,KAAK,YAJnB,GADJ;oBAMI;AAAA;wBAAA,EAAK,WAAU,UAAf;wBACI;AAAA;4BAAA,EAAK,WAAU,WAAf,EAA2B,OAAM,4BAAjC,EAA8D,SAAQ,WAAtE;4BACI,wCAAM,GAAE,uBAAR;AADJ;AADJ;AANJ;AAFJ,aADJ;AAiBH;;;;EA5EoB,gBAAM,S;;AAAzB,U,CAEK,S,GAAY;AACf,QAAI,iBAAU,MADC;AAEf,UAAM,iBAAU,MAFD;AAGf,UAAM,iBAAU,MAHD;AAIf,WAAO,iBAAU,MAJF;AAKf,cAAU,iBAAU,IALL;AAMf,oBAAgB,iBAAU;AANX,C;kBA8ER,U","file":"DatBoolean.js","sourcesContent":["import result from 'lodash.result';\nimport isFinite from 'lodash.isfinite';\nimport isString from 'lodash.isstring';\nimport React, { PropTypes } from 'react';\n\nclass DatBoolean extends React.Component {\n\n    static propTypes = {\n        id: PropTypes.string,\n        data: PropTypes.object,\n        path: PropTypes.string,\n        label: PropTypes.string,\n        onUpdate: PropTypes.func,\n        _onUpdateValue: PropTypes.func,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            value: 0,\n            isSliderActive: false,\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: this.getValue()\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: this.getValue(nextProps)\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.id !== this.props.id ||\n               nextProps.path !== this.props.path ||\n               nextProps.label !== this.props.label ||\n               nextState.value !== this.state.value;\n    }\n\n    getValue(props = this.props) {\n        return result(props.data, props.path);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.checked }, () => {\n            this.update();\n        });\n    }\n\n    update() {\n        const { value } = this.state;\n        this.props._onUpdateValue && this.props._onUpdateValue(this.props.path, value);\n        this.props.onUpdate && this.props.onUpdate(value);\n    }\n\n    render() {\n        const { id } = this.props;\n        const { value } = this.state;\n        const label = isString(this.props.label) ? this.props.label : this.props.path;\n        return (\n            <li className=\"cr boolean\">\n                <label htmlFor={id}>{label}</label>\n                <div className=\"checkbox-wrapper\">\n                    <input\n                        type=\"checkbox\"\n                        id={id}\n                        checked={value}\n                        onChange={this.handleChange} />\n                    <div className=\"checkbox\">\n                        <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\n                            <path d=\"M0,0L50,50M50,0L0,50Z\" />\n                        </svg>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n\n}\n\nexport default DatBoolean;\n"]}